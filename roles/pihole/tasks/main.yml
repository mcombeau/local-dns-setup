---
- name: Ensure Pi-Hole setup directory exists
  ansible.builtin.file:
    path: /etc/pihole
    state: directory

- name: Create setupVars.conf
  ansible.builtin.copy:
    dest: /etc/pihole/setupVars.conf
    content: |
      PIHOLE_INTERFACE={{ pihole.interface | default('eth0') }}
      QUERY_LOGGING=true
      INSTALL_WEB_SERVER=true
      INSTALL_WEB_INTERFACE=true
      LIGHTTPD_ENABLED=true
      CACHE_SIZE={{ pihole.cache_size | default('10000') }}
      DNS_FQDN_REQUIRED=true
      DNS_BOGUS_PRIV=true
      DNSMASQ_LISTENING={{ pihole.dnsmasq_listening | default('local') }}
      BLOCKING_ENABLED=true
      WEBUIBOXEDLAYOUT={{ pihole.webuiboxedlayout | default('boxed') }}
      WEBTHEME={{ pihole.webtheme | default('high-contrast-dark') }}
      PIHOLE_DNS_1={{ pihole.dns_1 }}
      PIHOLE_DNS_2={{ pihole.dns_3 }}
      DNSSEC={{ pihole.dnssec | default('false') }}
      REV_SERVER={{ pihole.rev_server | default('false') }}

- name: Download and install Pi-hole
  ansible.builtin.shell: |
    curl -sSL https://install.pi-hole.net | bash /dev/stdin --unattended
  args:
    creates: /etc/pihole/pihole-FTL.conf

- name: Debug Pi-hole web password
  ansible.builtin.debug:
    msg: "The Pi-hole password is {{ pihole.web_password }}"

- name: Reset Pi-hole web interface password
  ansible.builtin.shell: |
    pihole -a -p "{{ pihole.web_password | default('') }}"
  when: pihole.web_password is defined and pihole.web_password != ''

